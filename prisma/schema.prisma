// This is your Prisma schema file         
// learn more about it in the docs https//pris.ly/d/prisma-schema

generator client {
  provider  =     "prisma-client-js"
}

datasource db {
  provider  =     "sqlite"
  url       =     env("DATABASE_URL")
}

model Tenant {
  id              Int       @id @default(autoincrement())
  name            String    @unique
  users           User[]
  sites           Site[]
  leadGuests      LeadGuest[]
}

model Site {
  id              Int       @id @default(autoincrement())
  name            String  
  tenant          Tenant    @relation(fields: [tenantId], references: [id])
  tenantId        Int
  unitTypes       UnitType[]
  guestTypes      GuestType[]
  equipmentTypes  EquipmentType[]
}

model User {
  id              Int       @id @default(autoincrement())
  username        String    @unique
  name            String  
  password        String
  tenant          Tenant    @relation(fields: [tenantId], references: [id])
  tenantId        Int
  email           String    @unique
  roles           Role[]             
}

model Role {
  id              Int       @id @default(autoincrement())
  user            User      @relation(fields:[userId], references: [id])
  userId          Int
  role            String    
}

model UnitType {
    id            Int       @id @default(autoincrement())
    name          String  
    description   String
    site          Site      @relation(fields:[siteId], references: [id])       
    siteId        Int
    units         Unit[]
    equipmentTypes  EquipmentType[]
    extraTypes      ExtraType[]
    unitTypeFeesCalendarEntries UnitTypeFeesCalendar[]
}

model Unit {
  id                Int       @id @default(autoincrement())
  name              String   
  unitType          UnitType  @relation(fields:[unitTypeId], references: [id])      
  unitTypeId        Int
  bookings          Booking[]
  calendarEntries   Calendar[]
}

model LeadGuest {
  id            Int       @id @default(autoincrement())
  firstName     String         
  lastName      String         
  address1      String         
  address2      String         
  townCity      String
  county        String         
  postcode      String
  country       String         
  tel           String         
  email         String         
  password      String
  tenant        Tenant    @relation(fields: [tenantId], references: [id])
  tenantId      Int
  bookings      Booking[]
}

model GuestType {
  id                  Int       @id @default(autoincrement())
  name                String    
  description         String
  icon                String
  siteId              Int 
  site                Site      @relation(fields: [siteId], references: [id])
  bookingGuests       BookingGuest[]
  feesCalendarEntries GuestFeesCalendar[]
  @@unique([siteId, name], name: "siteGuestTypeNameCombo")
}

model EquipmentType {
  id              Int       @id @default(autoincrement())
  name            String    
  description     String
  icon            String
  siteId          Int 
  site            Site      @relation(fields: [siteId], references: [id])
  unitTypes       UnitType[]
}

model ExtraType {
  id                        Int       @id @default(autoincrement())
  name                      String
  description               String
  icon                      String
  unitTypes                 UnitType[]
  bookings                  Booking[]
  ExtraFeesCalendarEntries  ExtraFeesCalendar[]
}

model Booking {
  id                Int               @id @default(autoincrement())
  start             DateTime         
  end               DateTime 
  unit              Unit              @relation(fields: [unitId], references: [id])      
  unitId            Int          
  totalFee          Float  
  leadGuest         LeadGuest         @relation(fields: [leadGuestId], references: [id])
  leadGuestId       Int
  payments          Payment[]
  guests            BookingGuest[]
  pets              BookingPet[]
  vehicles          BookingVehicle[]     
  extras            ExtraType[]
  calendarEntries   Calendar[]
  status            String
}

model Calendar {
  id              String    @id
  date            DateTime  
  unit            Unit      @relation(fields: [unitId], references:[id])
  unitId          Int       
  booking         Booking?  @relation(fields: [bookingId], references: [id])
  bookingId       Int?       
}

model BookingGuest {
  id            Int       @id @default(autoincrement())
  booking       Booking   @relation(fields:[bookingId], references: [id])     
  bookingId     Int   
  name          String
  guestType     GuestType @relation(fields: [guestTypeId], references: [id])
  guestTypeId   Int
  start         DateTime         
  end           DateTime
  checkedIn     DateTime?
  checkedOut    DateTime?
}

model BookingVehicle {
  id            Int       @id @default(autoincrement())
  booking       Booking   @relation(fields:[bookingId], references: [id])     
  bookingId     Int
  vehicleReg    String
  start         DateTime
  end           DateTime
  checkedIn     DateTime?
  checkedOut    DateTime?
}

model BookingPet {
  id            Int       @id @default(autoincrement())
  booking       Booking   @relation(fields:[bookingId], references: [id])     
  bookingId     Int
  name          String      
  start         DateTime         
  end           DateTime
  checkedIn     DateTime?
  checkedOut    DateTime?
}

model UnitTypeFeesCalendar {
  id              Int       @id @default(autoincrement())
  date            DateTime
  unitType        UnitType  @relation(fields: [unitTypeId], references: [id])
  unitTypeId      Int
  feePerNight     Float
  feePerStay      Float
}

model GuestFeesCalendar {
  id              Int       @id @default(autoincrement())
  date            DateTime
  guestType       GuestType @relation(fields: [guestTypeId], references: [id])
  guestTypeId     Int
  feePerNight     Float
  feePerStay      Float     
}

model PetFeesCalendar {
  id              Int       @id @default(autoincrement())
  date            DateTime
  feePerNight     Float
  feePerStay      Float     
}

model VehicleFeesCalendar {
  id              Int       @id @default(autoincrement())
  date            DateTime
  feePerNight     Float
  feePerStay      Float  
}

model ExtraFeesCalendar {
  id              Int       @id @default(autoincrement())
  date            DateTime
  extraType       ExtraType @relation(fields: [extraTypeId], references: [id])
  extraTypeId     Int
  feePerNight     Float
  feePerStay      Float     
}

model Payment {
  id            Int       @id @default(autoincrement())
  paymentDate   DateTime    
  booking       Booking   @relation(fields:[bookingId], references: [id])     
  bookingId     Int         
  paymentAmount Float
  paymentMethod String
}

model Token {
  id         String    @id @unique
}